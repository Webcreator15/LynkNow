generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  passwordHash  String
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  emailVerified DateTime?
  verifyToken   String?   @unique

  profiles     Profile[]
  participants ConversationParticipant[]
  messages     Message[]
  queue        RandomQueue?
}

model Profile {
  id        String      @id @default(cuid())
  user      User        @relation(fields: [userId], references: [id])
  userId    String
  type      ProfileType
  bio       String?
  interests String?
  city      String?
  photos    Json?
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

enum ProfileType {
  LOVE
  FRIEND
}

model Conversation {
  id           String                    @id @default(cuid())
  createdAt    DateTime                  @default(now())
  isAnonymous  Boolean                   @default(true)
  participants ConversationParticipant[]
  messages     Message[]
}

model ConversationParticipant {
  id             String       @id @default(cuid())
  conversation   Conversation @relation(fields: [conversationId], references: [id])
  conversationId String
  user           User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId         String
  nickname       String?

  @@unique([conversationId, userId])
}

model Message {
  id             String       @id @default(cuid())
  conversation   Conversation @relation(fields: [conversationId], references: [id])
  conversationId String
  sender         User         @relation(fields: [senderId], references: [id], onDelete: Cascade)
  senderId       String
  content        String
  createdAt      DateTime     @default(now())

  @@index([conversationId, createdAt])
}

enum IntentType {
  AMOUR
  AMITIE
  CHAT
}

model RandomQueue {
  id         String     @id @default(cuid())
  user       User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     String     @unique
  intent     IntentType @default(CHAT)
  enqueuedAt DateTime   @default(now())

  @@index([intent, enqueuedAt])
}
